{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { UserContext } from \"../UserContext\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Transaction from \"../props/transactionProp\";\nimport { port } from \"../port\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OwnerMain = function OwnerMain(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(UserContext),\n    userID = _useContext.userID,\n    userType = _useContext.userType;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    transactions = _useState4[0],\n    setTransactions = _useState4[1];\n  useEffect(function () {\n    fetchUser(userID);\n    fetchtransactions(userID);\n  }, [userID]);\n  function fetchtransactions(_x) {\n    return _fetchtransactions.apply(this, arguments);\n  }\n  function _fetchtransactions() {\n    _fetchtransactions = _asyncToGenerator(function* (userID) {\n      try {\n        var response = yield fetch(port + \"/transactions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userID: userID,\n            userType: userType\n          })\n        });\n        if (response.ok) {\n          var result = yield response.json();\n          console.log(result.message);\n          setTransactions(result.transactions);\n        } else {\n          var error = yield response.json();\n          console.error(error.error);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    return _fetchtransactions.apply(this, arguments);\n  }\n  function fetchUser(_x2) {\n    return _fetchUser.apply(this, arguments);\n  }\n  function _fetchUser() {\n    _fetchUser = _asyncToGenerator(function* (userID) {\n      try {\n        var response = yield fetch(port + \"/user\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userID: userID,\n            userType: userType\n          })\n        });\n        if (response.ok) {\n          var result = yield response.json();\n          console.log(result.message);\n          var fname = result.data.FIRSTNM;\n          var lname = result.data.lastnm;\n          setUser({\n            fname: fname,\n            lname: lname\n          });\n        } else {\n          var error = yield response.json();\n          console.error(error.error);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    return _fetchUser.apply(this, arguments);\n  }\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(Text, {\n      style: styles.title,\n      children: [\"Welcome \", user == null ? void 0 : user.fname, \" \", user == null ? void 0 : user.lname, \"!\"]\n    }), userType === 'tenant' ? _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.subheading,\n        children: \"Your Next Payment Is Due On....\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.paymentButton,\n        onPress: function onPress() {\n          return navigation.navigate(\"Payment\");\n        },\n        children: _jsx(Text, {\n          style: styles.paymentButtonText,\n          children: \"Make Payment\"\n        })\n      })]\n    }) : null, _jsx(Text, {\n      style: styles.subheading,\n      children: \"Recent Transactions\"\n    }), _jsx(View, {\n      style: styles.transaction_container,\n      children: transactions.slice(0, 3).map(function (transaction) {\n        return _jsx(Transaction, {\n          type: transaction.transaction_type,\n          amount: transaction.transaction_amount,\n          user_id: transaction.user_id,\n          date: transaction.transaction_date,\n          id: transaction.transaction_id\n        }, transaction.transaction_id);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.paymentButton,\n      onPress: function onPress() {\n        return navigation.navigate(\"Transactions\");\n      },\n      children: _jsx(Text, {\n        style: styles.paymentButtonText,\n        children: \"View All Transactions\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 32\n  },\n  subheading: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 16\n  },\n  paymentButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    backgroundColor: \"blue\",\n    borderRadius: 4,\n    marginBottom: 16\n  },\n  paymentButtonText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  transaction_container: {\n    flex: 1,\n    alignItems: \"center\",\n    width: \"100%\"\n  }\n});\nexport default OwnerMain;","map":{"version":3,"names":["React","useContext","useEffect","useState","View","Text","StyleSheet","KeyboardAvoidingView","UserContext","TouchableOpacity","Transaction","port","jsxs","_jsxs","jsx","_jsx","OwnerMain","_ref","navigation","_useContext","userID","userType","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","transactions","setTransactions","fetchUser","fetchtransactions","_x","_fetchtransactions","apply","arguments","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","message","error","err","_x2","_fetchUser","fname","data","FIRSTNM","lname","lastnm","style","styles","container","behavior","children","title","subheading","paymentButton","onPress","navigate","paymentButtonText","transaction_container","slice","map","transaction","type","transaction_type","amount","transaction_amount","user_id","date","transaction_date","id","transaction_id","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","backgroundColor","borderRadius","color","width"],"sources":["C:/Users/marlo/Desktop/Projects/Renters/screens/Main.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet, KeyboardAvoidingView } from \"react-native\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport {TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport Transaction from '../props/transactionProp';\r\nimport { port } from \"../port\";\r\n\r\ntype User = {\r\n  fname?: string;\r\n  lname?: string;\r\n};\r\n\r\ntype TransactionData = {\r\n  transaction_id: string;\r\n  transaction_type: string;\r\n  transaction_amount: string;\r\n  transaction_date: string;\r\n  user_id: any;\r\n};\r\n\r\nconst OwnerMain = ({navigation}: any) => {\r\n  const { userID, userType } = useContext(UserContext);\r\n  const [user, setUser] = useState<User | null>(null); // Specify the type of user state as User | null\r\n  const [transactions, setTransactions] = useState<TransactionData[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch user data on component mount\r\n    fetchUser(userID);\r\n    fetchtransactions(userID);\r\n  }, [userID]);\r\n\r\n\r\n  async function fetchtransactions(userID: string) {\r\n    try {\r\n      const response = await fetch(`${port}/transactions`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userID, userType }),\r\n      });\r\n\r\n      // Check if response is successful\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log(result.message); // User Found message\r\n        setTransactions(result.transactions);\r\n      } else {\r\n        const error = await response.json();\r\n        console.error(error.error); // Error message from the server\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async function fetchUser(userID: string) {\r\n    try {\r\n      const response = await fetch(`${port}/user`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userID, userType }),\r\n      });\r\n\r\n      // Check if response is successful\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log(result.message); // User Found message\r\n        const fname = result.data.FIRSTNM;\r\n        const lname = result.data.lastnm;\r\n\r\n        // Set the fetched user data to state\r\n        setUser({ fname, lname });\r\n      } else {\r\n        const error = await response.json();\r\n        console.error(error.error); // Error message from the server\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n      <Text style={styles.title}>Welcome {user?.fname} {user?.lname}!</Text>\r\n      {userType === 'tenant'? \r\n      <View>\r\n      <Text style={styles.subheading}>Your Next Payment Is Due On....</Text>\r\n      <TouchableOpacity\r\n        style={styles.paymentButton}\r\n        onPress={() => navigation.navigate(\"Payment\")}\r\n      >\r\n        <Text style={styles.paymentButtonText}>Make Payment</Text>\r\n      </TouchableOpacity>\r\n    </View>: null}\r\n      <Text style={styles.subheading}>Recent Transactions</Text>\r\n      <View style={styles.transaction_container}>\r\n      {transactions.slice(0, 3).map(transaction => (\r\n        <Transaction\r\n          key={transaction.transaction_id}\r\n          type={transaction.transaction_type}\r\n          amount={transaction.transaction_amount}\r\n          user_id={transaction.user_id}\r\n          date={transaction.transaction_date}\r\n          id={transaction.transaction_id}\r\n        />\r\n      ))}\r\n    </View>\r\n    <TouchableOpacity\r\n      style={styles.paymentButton}\r\n      onPress={() => navigation.navigate(\"Transactions\")}\r\n    >\r\n      <Text style={styles.paymentButtonText}>View All Transactions</Text>\r\n    </TouchableOpacity>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n    \r\n    const styles = StyleSheet.create({\r\n    container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 16,\r\n    },\r\n    title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 32,\r\n    },\r\n    subheading: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    },\r\n    paymentButton: {\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    backgroundColor: \"blue\",\r\n    borderRadius: 4,\r\n    marginBottom: 16,\r\n    },\r\n    paymentButtonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    },\r\n    transaction_container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    },\r\n    });\r\n    \r\n    export default OwnerMain;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}