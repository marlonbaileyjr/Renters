{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { port } from \"../port\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TransactionDetails = function TransactionDetails(_ref) {\n  var route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    transaction = _useState2[0],\n    setTransactions = _useState2[1];\n  var _route$params = route.params,\n    id = _route$params.id,\n    username = _route$params.username;\n  useEffect(function () {\n    fetchTransactions(id);\n  }, [id]);\n  function fetchTransactions(_x) {\n    return _fetchTransactions.apply(this, arguments);\n  }\n  function _fetchTransactions() {\n    _fetchTransactions = _asyncToGenerator(function* (id) {\n      try {\n        var response = yield fetch(port + \"/transactiondetails\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: id\n          })\n        });\n        if (response.ok) {\n          var result = yield response.json();\n          console.log(result.message);\n          setTransactions(result.transactions);\n        } else {\n          var error = yield response.json();\n          console.error(error.error);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    return _fetchTransactions.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: transaction == null ? void 0 : transaction.map(function (trans) {\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Type:\"\n        }), _jsx(Text, {\n          style: styles.value,\n          children: trans.transaction_type\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Amount:\"\n        }), _jsx(Text, {\n          style: styles.value,\n          children: trans.transaction_amount\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"FROM:\"\n        }), _jsx(Text, {\n          style: styles.value,\n          children: username\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Date:\"\n        }), _jsx(Text, {\n          style: styles.value,\n          children: trans.transaction_date\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Transaction ID:\"\n        }), _jsx(Text, {\n          style: styles.value,\n          children: trans.transaction_id\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Property ID:\"\n        }), _jsx(Text, {\n          style: styles.value,\n          children: trans.property_id\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Credit Card:\"\n        }), _jsx(Text, {\n          style: styles.value,\n          children: trans.credit_card\n        })]\n      }, trans.transaction_id);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f8f8f8'\n  },\n  label: {\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  value: {\n    marginBottom: 16\n  }\n});\nexport default TransactionDetails;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","port","jsx","_jsx","jsxs","_jsxs","TransactionDetails","_ref","route","_useState","_useState2","_slicedToArray","transaction","setTransactions","_route$params","params","id","username","fetchTransactions","_x","_fetchTransactions","apply","arguments","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","message","transactions","error","err","style","styles","container","children","map","trans","label","value","transaction_type","transaction_amount","transaction_date","transaction_id","property_id","credit_card","create","flex","padding","backgroundColor","fontWeight","marginBottom"],"sources":["C:/Users/marlo/Desktop/Projects/Renters/screens/TransactionDetails.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { port } from '../port';\r\nimport { UserContext } from '../UserContext';\r\n\r\ntype Transaction = {\r\n    credit_card: string,\r\n    owner_id : string,\r\n    property_id : string,\r\n    transaction_amount : string,\r\n    transaction_date  : string,\r\n    transaction_id : string,\r\n    transaction_type : string,\r\n    user_id : string,\r\n};\r\n\r\nconst TransactionDetails = ({ route }: any) => {\r\n  const [transaction, setTransactions] = useState<Transaction[]>([]); // Specify the type of user state as User | null\r\n  const {id, username } = route.params;\r\n  useEffect(() => {\r\n    fetchTransactions(id);\r\n  }, [id]);\r\n\r\n\r\n  async function fetchTransactions(id : string) {\r\n    try {\r\n      const response = await fetch(`${port}/transactiondetails`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ id }),\r\n      });\r\n\r\n      // Check if response is successful\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log(result.message); // User Found message\r\n        setTransactions(result.transactions);\r\n\r\n      } else {\r\n        const error = await response.json();\r\n        console.error(error.error); // Error message from the server\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {transaction?.map((trans) => (\r\n        <View key={trans.transaction_id}>\r\n          <Text style={styles.label}>Type:</Text>\r\n          <Text style={styles.value}>{trans.transaction_type}</Text>\r\n          <Text style={styles.label}>Amount:</Text>\r\n          <Text style={styles.value}>{trans.transaction_amount}</Text>\r\n          <Text style={styles.label}>FROM:</Text>\r\n          <Text style={styles.value}>{username}</Text>\r\n          <Text style={styles.label}>Date:</Text>\r\n          <Text style={styles.value}>{trans.transaction_date}</Text>\r\n          <Text style={styles.label}>Transaction ID:</Text>\r\n          <Text style={styles.value}>{trans.transaction_id}</Text>\r\n          <Text style={styles.label}>Property ID:</Text>\r\n          <Text style={styles.value}>{trans.property_id}</Text>\r\n          <Text style={styles.label}>Credit Card:</Text>\r\n          <Text style={styles.value}>{trans.credit_card}</Text>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n  \r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#f8f8f8',\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  value: {\r\n    marginBottom: 16,\r\n  },\r\n});\r\n\r\nexport default TransactionDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}