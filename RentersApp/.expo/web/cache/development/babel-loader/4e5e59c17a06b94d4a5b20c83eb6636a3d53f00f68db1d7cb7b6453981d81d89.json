{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { MultipleSelectList } from 'react-native-dropdown-select-list';\nimport { emailPort } from \"../../port\";\nimport { UserContext } from \"../../UserContext\";\nimport { port } from \"../../port\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddTenant = function AddTenant() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    fname = _useState2[0],\n    setFname = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lname = _useState4[0],\n    setLname = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selected = _useState8[0],\n    _setSelected = _useState8[1];\n  var _useContext = useContext(UserContext),\n    userID = _useContext.userID;\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    data = _useState10[0],\n    setData = _useState10[1];\n  useEffect(function () {\n    fetchProperties(userID);\n  }, [userID]);\n  function SendEmail(_x, _x2) {\n    return _SendEmail.apply(this, arguments);\n  }\n  function _SendEmail() {\n    _SendEmail = _asyncToGenerator(function* (email, body) {\n      try {\n        var response = yield fetch(emailPort + \"/send-email\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            body: body\n          })\n        });\n        if (response.ok) {\n          var result = yield response.json();\n          alert(result);\n        } else {\n          var error = yield response.json();\n          alert(error);\n        }\n      } catch (err) {\n        alert(err);\n      }\n    });\n    return _SendEmail.apply(this, arguments);\n  }\n  function fetchProperties(_x3) {\n    return _fetchProperties.apply(this, arguments);\n  }\n  function _fetchProperties() {\n    _fetchProperties = _asyncToGenerator(function* (userId) {\n      try {\n        var response = yield fetch(port + \"/property\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: userId\n          })\n        });\n        if (response.ok) {\n          var result = yield response.json();\n          var formattedData = result.data.map(function (property, index) {\n            var propertyDetails = property.property_street + \" \" + property.property_city + \" \" + property.property_state;\n            return {\n              key: index + 1,\n              value: propertyDetails\n            };\n          });\n          setData(formattedData);\n        } else {\n          var error = yield response.json();\n          alert(error);\n        }\n      } catch (err) {\n        alert(err);\n      }\n    });\n    return _fetchProperties.apply(this, arguments);\n  }\n  var urlData = {\n    fname: fname,\n    lname: lname,\n    email: email,\n    selected: selected\n  };\n  var encodedArray = encodeURIComponent(JSON.stringify(urlData));\n  var handleSendEmail = function handleSendEmail() {\n    var link = \"https://localhost:5500/tenant-signup?data=\" + encodedArray;\n    SendEmail(email, link);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"First Name\",\n      value: fname,\n      onChangeText: setFname\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Last Name\",\n      value: lname,\n      onChangeText: setLname\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(MultipleSelectList, {\n      setSelected: function setSelected(val) {\n        return _setSelected(val);\n      },\n      data: data,\n      save: \"value\",\n      onSelect: function onSelect() {\n        return alert(selected);\n      },\n      label: \"Assign Properties\"\n    }), fname && lname && email && selected ? _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSendEmail,\n      children: _jsx(Text, {\n        style: styles.button_text,\n        children: \"Send Email\"\n      })\n    }) : null]\n  });\n};\nexport default AddTenant;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 8,\n    padding: 8,\n    margin: 10,\n    width: 200\n  },\n  button: {\n    backgroundColor: 'lightgrey',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n    marginBottom: 16,\n    marginTop: 20\n  },\n  button_text: {\n    color: 'black',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["TextInput","React","useContext","useEffect","useState","MultipleSelectList","emailPort","UserContext","port","jsx","_jsx","jsxs","_jsxs","AddTenant","_useState","_useState2","_slicedToArray","fname","setFname","_useState3","_useState4","lname","setLname","_useState5","_useState6","email","setEmail","_useState7","_useState8","selected","setSelected","_useContext","userID","_useState9","_useState10","data","setData","fetchProperties","SendEmail","_x","_x2","_SendEmail","apply","arguments","_asyncToGenerator","body","response","fetch","method","headers","JSON","stringify","ok","result","json","alert","error","err","_x3","_fetchProperties","userId","formattedData","map","property","index","propertyDetails","property_street","property_city","property_state","key","value","urlData","encodedArray","encodeURIComponent","handleSendEmail","link","View","style","styles","container","children","input","placeholder","onChangeText","val","save","onSelect","label","TouchableOpacity","button","onPress","Text","button_text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","borderColor","borderRadius","padding","margin","width","paddingHorizontal","paddingVertical","marginBottom","marginTop","color","fontWeight"],"sources":["C:/Users/marlo/Desktop/Projects/Renters/screens/Owner/AddUser.tsx"],"sourcesContent":["import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport React, { useContext, useEffect, useState } from \"react\";import { MultipleSelectList } from 'react-native-dropdown-select-list'\r\nimport { emailPort } from '../../port';\r\nimport { UserContext } from '../../UserContext';\r\nimport { port } from '../../port';\r\n\r\nconst AddTenant = () => {\r\n  const [fname, setFname] = useState('');\r\n  const [lname, setLname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [selected, setSelected] = useState([]);\r\n  const { userID} = useContext(UserContext);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch user data on component mount\r\n    fetchProperties(userID);\r\n  }, [userID]);\r\n\r\n  async function SendEmail(email: string, body: string) {\r\n    try {\r\n      const response = await fetch(`${emailPort}/send-email`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, body }),\r\n      });\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        alert(result);\r\n      } else {\r\n        const error = await response.json();\r\n        alert(error);\r\n      }\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  async function fetchProperties(userId: any) {\r\n    try {\r\n      const response = await fetch(`${port}/property`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userId }),\r\n      });\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        const formattedData: any = result.data.map((property : any, index:any) => {\r\n          const propertyDetails = `${property.property_street} ${property.property_city} ${property.property_state}`;\r\n          return {\r\n            key: index + 1,\r\n            value: propertyDetails\r\n          };\r\n        });\r\n        setData(formattedData);\r\n      } else {\r\n        const error = await response.json();\r\n        alert(error);\r\n      }\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  }\r\n  \r\n  const urlData = {\r\n    fname,\r\n    lname,\r\n    email,\r\n    selected,\r\n  };\r\n\r\n  // Encode the data\r\n  const encodedArray = encodeURIComponent(JSON.stringify(urlData));\r\n\r\n  const handleSendEmail = () => {\r\n    // Generate the link with the parameters\r\n    const link = `https://localhost:5500/tenant-signup?data=${encodedArray}`;\r\n\r\n    // Call the SendEmail function with the email and link as the body\r\n    SendEmail(email, link);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"First Name\"\r\n        value={fname}\r\n        onChangeText={setFname}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Last Name\"\r\n        value={lname}\r\n        onChangeText={setLname}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <MultipleSelectList\r\n        setSelected={(val: any) => setSelected(val)} \r\n        data={data} \r\n        save=\"value\"\r\n        onSelect={() => alert(selected)} \r\n        label=\"Assign Properties\"\r\n      />\r\n        {fname && lname && email && selected ? (    \r\n      <TouchableOpacity style={styles.button} onPress={handleSendEmail}>\r\n        <Text style={styles.button_text}>Send Email</Text>\r\n      </TouchableOpacity>\r\n      ) : null}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AddTenant;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 8,\r\n    padding: 8,\r\n    margin: 10,\r\n    width: 200,\r\n  },\r\n  button: {\r\n    backgroundColor: 'lightgrey',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n    marginTop: 20,\r\n  },\r\n  button_text: {\r\n    color: 'black',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}