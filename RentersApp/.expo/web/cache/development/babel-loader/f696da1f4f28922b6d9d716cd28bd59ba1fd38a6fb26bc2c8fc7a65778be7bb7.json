{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { fetchProp } from \"../../functions/getPropertyName\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TenantDetails = function TenantDetails(_ref) {\n  var route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tenants = _useState2[0],\n    setTenants = _useState2[1];\n  var _route$params = route.params,\n    user_id = _route$params.user_id,\n    first_name = _route$params.first_name,\n    last_name = _route$params.last_name,\n    email = _route$params.email,\n    phone_number = _route$params.phone_number,\n    property_id = _route$params.property_id;\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    propName = _useState4[0],\n    setpropName = _useState4[1];\n  useEffect(function () {\n    var fetchPropData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var fetchedProperty = yield fetchProp(property_id);\n          setpropName(fetchedProperty);\n        } catch (error) {\n          console.error('Failed to fetch user data:', error);\n        }\n      });\n      return function fetchPropData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchPropData();\n  }, [property_id]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: \"USER ID:\"\n    }), _jsx(Text, {\n      style: styles.value,\n      children: user_id\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"name:\"\n    }), _jsx(Text, {\n      style: styles.value,\n      children: first_name + \" \" + last_name\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Email:\"\n    }), _jsx(Text, {\n      style: styles.value,\n      children: email\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Phone Number:\"\n    }), _jsx(Text, {\n      style: styles.value,\n      children: phone_number\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Property:\"\n    }), _jsx(Text, {\n      style: styles.value,\n      children: propName\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f8f8f8'\n  },\n  label: {\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  value: {\n    marginBottom: 16\n  }\n});\nexport default TenantDetails;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","fetchProp","jsx","_jsx","jsxs","_jsxs","TenantDetails","_ref","route","_useState","_useState2","_slicedToArray","tenants","setTenants","_route$params","params","user_id","first_name","last_name","email","phone_number","property_id","_useState3","_useState4","propName","setpropName","fetchPropData","_ref2","_asyncToGenerator","fetchedProperty","error","console","apply","arguments","style","styles","container","children","label","value","create","flex","padding","backgroundColor","fontWeight","marginBottom"],"sources":["C:/Users/marlo/Desktop/Projects/Renters/screens/Owner/TenantDetails.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { fetchProp } from '../../functions/getPropertyName';\r\n\r\ntype TenantData = {\r\n  key: number,\r\n  user_id: string,\r\n  firstnm: string,\r\n  lastnm: string,\r\n  email: string,\r\n  phonenum: string,\r\n  owner_id: string,\r\n  user_type: string,\r\n  property_id: string\r\n};\r\n\r\nconst TenantDetails = ({ route }: any) => {\r\n  const [tenants, setTenants] = useState<TenantData[]>([]);\r\n  const { user_id, first_name, last_name, email, phone_number, property_id } = route.params;\r\n  const [propName, setpropName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchPropData = async () => {\r\n      try {\r\n        const fetchedProperty: any = await fetchProp(property_id);\r\n        setpropName(fetchedProperty);\r\n      } catch (error) {\r\n        console.error('Failed to fetch user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchPropData();\r\n  }, [property_id]); // Add property_id as a dependency for useEffect\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.label}>USER ID:</Text>\r\n      <Text style={styles.value}>{user_id}</Text>\r\n      <Text style={styles.label}>name:</Text>\r\n      <Text style={styles.value}>{`${first_name} ${last_name}`}</Text>\r\n      <Text style={styles.label}>Email:</Text>\r\n      <Text style={styles.value}>{email}</Text>\r\n      <Text style={styles.label}>Phone Number:</Text>\r\n      <Text style={styles.value}>{phone_number}</Text>\r\n      <Text style={styles.label}>Property:</Text>\r\n      <Text style={styles.value}>{propName}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#f8f8f8',\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  value: {\r\n    marginBottom: 16,\r\n  },\r\n});\r\n\r\nexport default TenantDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}