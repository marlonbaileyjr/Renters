{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var UserContext = createContext({\n  userType: '',\n  setUserType: function setUserType(userType) {},\n  loggedin: false,\n  setLoggedin: function setLoggedin(loggedin) {},\n  userID: '',\n  setUserID: function setUserID(userID) {}\n});\nexport function UserContextProvider(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userType = _useState2[0],\n    setUserType = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loggedin = _useState4[0],\n    setLoggedin = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userID = _useState6[0],\n    setUserID = _useState6[1];\n  return _jsx(UserContext.Provider, {\n    value: {\n      userType: userType,\n      setUserType: setUserType,\n      loggedin: loggedin,\n      setLoggedin: setLoggedin,\n      userID: userID,\n      setUserID: setUserID\n    },\n    children: props.children\n  });\n}","map":{"version":3,"names":["createContext","useState","jsx","_jsx","UserContext","userType","setUserType","loggedin","setLoggedin","userID","setUserID","UserContextProvider","props","_useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","Provider","value","children"],"sources":["C:/Users/marlo/Desktop/Projects/Renters/UserContext.tsx"],"sourcesContent":["import { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext({\r\n  userType: '',\r\n  setUserType: (userType: string) => {},\r\n  loggedin: false,\r\n  setLoggedin: (loggedin: boolean) => {},\r\n  userID: '',\r\n  setUserID: (userID: string) => {}\r\n});\r\n\r\nexport function UserContextProvider(props: { children: React.ReactNode }) {\r\n  const [userType, setUserType] = useState('');\r\n  const [loggedin, setLoggedin] = useState(false);\r\n  const [userID, setUserID] = useState('');\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{ userType, setUserType, loggedin, setLoggedin, userID, setUserID }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEhD,OAAO,IAAMC,WAAW,GAAGJ,aAAa,CAAC;EACvCK,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,SAAAA,YAACD,QAAgB,EAAK,CAAC,CAAC;EACrCE,QAAQ,EAAE,KAAK;EACfC,WAAW,EAAE,SAAAA,YAACD,QAAiB,EAAK,CAAC,CAAC;EACtCE,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,SAAAA,UAACD,MAAc,EAAK,CAAC;AAClC,CAAC,CAAC;AAEF,OAAO,SAASE,mBAAmBA,CAACC,KAAoC,EAAE;EACxE,IAAAC,SAAA,GAAgCZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCR,QAAQ,GAAAS,UAAA;IAAER,WAAW,GAAAQ,UAAA;EAC5B,IAAAE,UAAA,GAAgCf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAF,cAAA,CAAAC,UAAA;IAAxCT,QAAQ,GAAAU,UAAA;IAAET,WAAW,GAAAS,UAAA;EAC5B,IAAAC,UAAA,GAA4BjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCT,MAAM,GAAAU,UAAA;IAAET,SAAS,GAAAS,UAAA;EAExB,OACEhB,IAAA,CAACC,WAAW,CAACgB,QAAQ;IACnBC,KAAK,EAAE;MAAEhB,QAAQ,EAARA,QAAQ;MAAEC,WAAW,EAAXA,WAAW;MAAEC,QAAQ,EAARA,QAAQ;MAAEC,WAAW,EAAXA,WAAW;MAAEC,MAAM,EAANA,MAAM;MAAEC,SAAS,EAATA;IAAU,CAAE;IAAAY,QAAA,EAE1EV,KAAK,CAACU;EAAQ,CACK,CAAC;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}