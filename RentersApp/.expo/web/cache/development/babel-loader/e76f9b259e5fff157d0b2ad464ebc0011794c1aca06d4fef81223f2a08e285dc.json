{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport OwnerNavigator from \"./routes/Drawers/OwnerDrawer\";\nimport TenantNavigator from \"./routes/Drawers/TenantDrawer\";\nimport MainDrawerNavigator from \"./routes/Drawers/MainDrawer\";\nimport Login from \"./routes/Stacks/LoginStack\";\nimport { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { UserContext } from \"./UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userType = _useState2[0],\n    setUserType = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loggedin = _useState4[0],\n    setLoggedin = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userID = _useState6[0],\n    setUserID = _useState6[1];\n  return _jsx(UserContext.Provider, {\n    value: {\n      userType: userType,\n      setUserType: setUserType,\n      loggedin: loggedin,\n      setLoggedin: setLoggedin,\n      userID: userID,\n      setUserID: setUserID\n    },\n    children: _jsx(NavigationContainer, {\n      children: loggedin ? userType === 'owner' ? _jsx(OwnerNavigator, {}) : userType === 'tenant' ? _jsx(TenantNavigator, {}) : _jsx(Login, {}) : _jsx(MainDrawerNavigator, {})\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StyleSheet","OwnerNavigator","TenantNavigator","MainDrawerNavigator","Login","useState","NavigationContainer","UserContext","jsx","_jsx","App","_useState","_useState2","_slicedToArray","userType","setUserType","_useState3","_useState4","loggedin","setLoggedin","_useState5","_useState6","userID","setUserID","Provider","value","children","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/marlo/Desktop/Projects/Renters/App.tsx"],"sourcesContent":["import 'react-native-gesture-handler';\r\nimport { StyleSheet } from 'react-native';\r\nimport OwnerNavigator from './routes/Drawers/OwnerDrawer';\r\nimport TenantNavigator from './routes/Drawers/TenantDrawer';\r\nimport MainDrawerNavigator from './routes/Drawers/MainDrawer';\r\nimport Login from './routes/Stacks/LoginStack';\r\nimport { useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { UserContext } from './UserContext';\r\n\r\nexport default function App() {\r\n  const [userType, setUserType]: any = useState('');\r\n  const [loggedin, setLoggedin]: any = useState(false); // Updated variable name\r\n  const [userID, setUserID]: any = useState('');\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userType, setUserType, loggedin, setLoggedin, userID, setUserID }}>\r\n      <NavigationContainer>\r\n        {loggedin ? ( // Updated variable name\r\n          userType === 'owner' ? (\r\n            <OwnerNavigator />\r\n          ) : userType === 'tenant' ? (\r\n            <TenantNavigator/>\r\n          ) : (\r\n            <Login />\r\n          )\r\n        ) : (\r\n          <MainDrawerNavigator />\r\n        )}\r\n      </NavigationContainer>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAO,8BAA8B;AAAC,OAAAA,UAAA;AAEtC,OAAOC,cAAc;AACrB,OAAOC,eAAe;AACtB,OAAOC,mBAAmB;AAC1B,OAAOC,KAAK;AACZ,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,WAAW;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAE5C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAqCN,QAAQ,CAAC,EAAE,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAqCX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAiCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAtCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAExB,OACEZ,IAAA,CAACF,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEX,QAAQ,EAARA,QAAQ;MAAEC,WAAW,EAAXA,WAAW;MAAEG,QAAQ,EAARA,QAAQ;MAAEC,WAAW,EAAXA,WAAW;MAAEG,MAAM,EAANA,MAAM;MAAEC,SAAS,EAATA;IAAU,CAAE;IAAAG,QAAA,EAC/FjB,IAAA,CAACH,mBAAmB;MAAAoB,QAAA,EACjBR,QAAQ,GACPJ,QAAQ,KAAK,OAAO,GAClBL,IAAA,CAACR,cAAc,IAAE,CAAC,GAChBa,QAAQ,KAAK,QAAQ,GACvBL,IAAA,CAACP,eAAe,IAAC,CAAC,GAElBO,IAAA,CAACL,KAAK,IAAE,CACT,GAEDK,IAAA,CAACN,mBAAmB,IAAE;IACvB,CACkB;EAAC,CACF,CAAC;AAE3B;AAEA,IAAMwB,MAAM,GAAG3B,UAAU,CAAC4B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}