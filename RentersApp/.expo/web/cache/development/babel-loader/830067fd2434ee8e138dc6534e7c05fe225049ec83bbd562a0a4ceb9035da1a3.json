{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { port } from \"../port\";\nexport function fetchProp(_x) {\n  return _fetchProp.apply(this, arguments);\n}\nfunction _fetchProp() {\n  _fetchProp = _asyncToGenerator(function* (propID) {\n    try {\n      var response = yield fetch(port + \"/propName\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          propID: propID\n        })\n      });\n      if (response.ok) {\n        var result = yield response.json();\n        return result.data[0].property_street;\n      } else {\n        var error = yield response.json();\n        console.error(error.error);\n        return null;\n      }\n    } catch (err) {\n      console.error(err);\n      return null;\n    }\n  });\n  return _fetchProp.apply(this, arguments);\n}","map":{"version":3,"names":["port","fetchProp","_x","_fetchProp","apply","arguments","_asyncToGenerator","propID","response","fetch","method","headers","body","JSON","stringify","ok","result","json","data","property_street","error","console","err"],"sources":["C:/Users/marlo/Desktop/Projects/Renters/functions/getPropertyName.tsx"],"sourcesContent":["import { port } from \"../port\";\r\n\r\nexport async function fetchProp(propID: string) {\r\n  // Execute SQL query to fetch user from database\r\n  try {\r\n    const response = await fetch(`${port}/propName`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ propID }),\r\n    });\r\n\r\n    // Check if response is successful\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      return(result.data[0].property_street);\r\n\r\n      // Set the fetched user data to state\r\n      //return result.data[0];\r\n    } else {\r\n      const error = await response.json();\r\n      console.error(error.error); // Error message from the server\r\n      return null; // Return null or an appropriate value for error handling\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    return null; // Return null or an appropriate value for error handling\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,IAAI;AAEb,gBAAsBC,SAASA,CAAAC,EAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AA2B9B,SAAAF,WAAA;EAAAA,UAAA,GAAAG,iBAAA,CA3BM,WAAyBC,MAAc,EAAE;IAE9C,IAAI;MACF,IAAMC,QAAQ,SAASC,KAAK,CAAIT,IAAI,gBAAa;QAC/CU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP,MAAM,EAANA;QAAO,CAAC;MACjC,CAAC,CAAC;MAGF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACf,IAAMC,MAAM,SAASR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,eAAe;MAIvC,CAAC,MAAM;QACL,IAAMC,KAAK,SAASZ,QAAQ,CAACS,IAAI,CAAC,CAAC;QACnCI,OAAO,CAACD,KAAK,CAACA,KAAK,CAACA,KAAK,CAAC;QAC1B,OAAO,IAAI;MACb;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZD,OAAO,CAACD,KAAK,CAACE,GAAG,CAAC;MAClB,OAAO,IAAI;IACb;EACF,CAAC;EAAA,OAAAnB,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}